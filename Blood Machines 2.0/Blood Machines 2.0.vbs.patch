--- Blood Machines 2.0.vbs.original
+++ Blood Machines 2.0.vbs
@@ -208,2 +208,2 @@
-'dim MusicDirectory : MusicDirectory = "C:\Visual Pinball\Music\Blood Machines OST\"
-dim MusicDirectory
+'dim MusicDir : MusicDir = "C:\Visual Pinball\Music\Blood Machines OST\"
+dim MusicDir
@@ -211 +211 @@
-'	MusicDirectory = musicdirectory("Blood Machines OST")	'this not working right now
+	MusicDir = musicdirectory & "Blood Machines OST\"
@@ -213 +213 @@
-	MusicDirectory = GetMusicFolder & "\Blood Machines OST\"
+'	MusicDir = GetMusicFolder & "\Blood Machines OST\"
@@ -1819 +1819 @@
-	scene.AddActor FlexDMD.NewImage("highlight1" , "misc/3lines1highlight.png" ) ' highlight1 Underlay for mission screens  12px high move it around -1 10 21 height
+	scene.AddActor FlexDMD.NewImage("highlight1" , "Misc/3lines1highlight.png" ) ' highlight1 Underlay for mission screens  12px high move it around -1 10 21 height
@@ -11636,7 +11636,7 @@
-	if Not fso.FolderExists(MusicDirectory) Then
-		'InfoBox.text = "Music path: " & MusicDirectory & " not found. Checking default path."
-		MusicDirectory = "C:\vPinball\VisualPinball\Music\Blood Machines OST\"
-		if Not fso.FolderExists(MusicDirectory) Then
-			MusicDirectory = "D:\Visual Pinball\Music\Blood Machines OST\"
-			if Not fso.FolderExists(MusicDirectory) Then
-				'InfoBox.text = "Music path: " & MusicDirectory & " not found. Go get a Music pack."
+	if Not fso.FolderExists(MusicDir) Then
+		'InfoBox.text = "Music path: " & MusicDir & " not found. Checking default path."
+		MusicDir = "C:\vPinball\VisualPinball\Music\Blood Machines OST\"
+		if Not fso.FolderExists(MusicDir) Then
+			MusicDir = "D:\Visual Pinball\Music\Blood Machines OST\"
+			if Not fso.FolderExists(MusicDir) Then
+				'InfoBox.text = "Music path: " & MusicDir & " not found. Go get a Music pack."
@@ -11677 +11677 @@
-	oPlayer1.URL = MusicDirectory & Songs(CurrentSong)
+	oPlayer1.URL = MusicDir & Songs(CurrentSong)
@@ -11695 +11695 @@
-'	oPlayer1.URL = MusicDirectory & "\" & Songs(CurrentSong)
+'	oPlayer1.URL = MusicDir & "\" & Songs(CurrentSong)
@@ -11725 +11725 @@
-		oPlayer1.URL = MusicDirectory & Songs(CurrentSong)
+		oPlayer1.URL = MusicDir & Songs(CurrentSong)
@@ -11730 +11730 @@
-		oPlayer2.URL = MusicDirectory & Songs(CurrentSong)
+		oPlayer2.URL = MusicDir & Songs(CurrentSong)
@@ -14325,0 +14326,33 @@
+Class DropTarget
+  Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+  Public Property Let Secondary(input): Set m_secondary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+  Public Property Let IsDropped(input): m_isDropped = input: End Property
+
+  Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+    Set m_primary = primary
+    Set m_secondary = secondary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_isDropped = isDropped
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -14343,0 +14377,2 @@
+'
+'       isDropped:  Boolean which determines whether a drop target is dropped. Set to false if they are initially raised, true if initially dropped.
@@ -14345,9 +14380,9 @@
-DT1 = Array(TargetScavenge1, TargetScavenge1a, TargetScavenge1p, 1, 0)
-DT2 = Array(TargetScavenge2, TargetScavenge2a, TargetScavenge2p, 2, 0)
-DT3 = Array(TargetScavenge3, TargetScavenge3a, TargetScavenge3p, 3, 0)
-DT4 = Array(TargetVascan1, TargetVascan1a, TargetVascan1p, 4, 0)
-DT5 = Array(TargetVascan2, TargetVascan2a, TargetVascan2p, 5, 0)
-DT6 = Array(TargetVascan3, TargetVascan3a, TargetVascan3p, 6, 0)
-DT7 = Array(TargetVascan4, TargetVascan4a, TargetVascan4p, 7, 0)
-DT8 = Array(TargetVascan5, TargetVascan5a, TargetVascan5p, 8, 0)
-DT9 = Array(TargetVascan6, TargetVascan6a, TargetVascan6p, 9, 0)
+Set DT1 = (new DropTarget)(TargetScavenge1, TargetScavenge1a, TargetScavenge1p, 1, 0, false)
+Set DT2 = (new DropTarget)(TargetScavenge2, TargetScavenge2a, TargetScavenge2p, 2, 0, false)
+Set DT3 = (new DropTarget)(TargetScavenge3, TargetScavenge3a, TargetScavenge3p, 3, 0, false)
+Set DT4 = (new DropTarget)(TargetVascan1, TargetVascan1a, TargetVascan1p, 4, 0, false)
+Set DT5 = (new DropTarget)(TargetVascan2, TargetVascan2a, TargetVascan2p, 5, 0, false)
+Set DT6 = (new DropTarget)(TargetVascan3, TargetVascan3a, TargetVascan3p, 6, 0, false)
+Set DT7 = (new DropTarget)(TargetVascan4, TargetVascan4a, TargetVascan4p, 7, 0, false)
+Set DT8 = (new DropTarget)(TargetVascan5, TargetVascan5a, TargetVascan5p, 8, 0, false)
+Set DT9 = (new DropTarget)(TargetVascan6, TargetVascan6a, TargetVascan6p, 9, 0, false)
@@ -14377,13 +14411,0 @@
-
-Dim DTArray0, DTArray1, DTArray2, DTArray3, DTArray4
-Redim DTArray0(UBound(DTArray)), DTArray1(UBound(DTArray)), DTArray2(UBound(DTArray)), DTArray3(UBound(DTArray)), DTArray4(UBound(DTArray))
-
-Dim DTIdx
-For DTIdx = 0 to UBound(DTArray)
-   Set DTArray0(DTIdx) = DTArray(DTIdx)(0)
-   Set DTArray1(DTIdx) = DTArray(DTIdx)(1)
-   Set DTArray2(DTIdx) = DTArray(DTIdx)(2)
-   DTArray3(DTIdx) = DTArray(DTIdx)(3)
-   DTArray4(DTIdx) = DTArray(DTIdx)(4)
-Next
-
@@ -14399,3 +14421,3 @@
-	DTArray4(i) =  DTCheckBrick(Activeball,DTArray2(i))
-	If DTArray4(i) = 1 or DTArray4(i) = 3 or DTArray4(i) = 4 Then
-		DTBallPhysics Activeball, DTArray2(i).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -14423 +14445 @@
-	DTArray4(i) = -1
+	DTArray(i).animate = -1
@@ -14436 +14458 @@
-	DTArray4(i) = 1
+	DTArray(i).animate = 1
@@ -14443 +14465 @@
-		If DTArray3(i) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -14498 +14520 @@
-		DTArray4(i) = DTAnimate(DTArray0(i),DTArray1(i),DTArray2(i),DTArray3(i),DTArray4(i))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
@@ -19621 +19643 @@
-		DMD.visible=1
+		'DMD.visible=1
