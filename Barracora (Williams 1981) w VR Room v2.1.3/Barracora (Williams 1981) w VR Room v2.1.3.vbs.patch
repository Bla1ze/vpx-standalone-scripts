--- Barracora (Williams 1981) w VR Room v2.1.3.vbs.original
+++ Barracora (Williams 1981) w VR Room v2.1.3.vbs
@@ -2024,0 +2025,33 @@
+Class DropTarget
+  Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+  Public Property Let Secondary(input): Set m_secondary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+  Public Property Let IsDropped(input): m_isDropped = input: End Property
+
+  Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+    Set m_primary = primary
+    Set m_secondary = secondary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_isDropped = isDropped
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -2046,8 +2079,8 @@
-DT41 = Array(sw41, sw41a, sw41p, 41, 0, false)
-DT42 = Array(sw42, sw42a, sw42p, 42, 0, false)
-DT43 = Array(sw43, sw43a, sw43p, 43, 0, false)
-DT44 = Array(sw44, sw44a, sw44p, 44, 0, false)
-DT45 = Array(sw45, sw45a, sw45p, 45, 0, false)
-DT46 = Array(sw46, sw46a, sw46p, 46, 0, false)
-DT47 = Array(sw47, sw47a, sw47p, 47, 0, false)
-DT48 = Array(sw48, sw48a, sw48p, 48, 0, false)
+Set DT41 = (new DropTarget)(sw41, sw41a, sw41p, 41, 0, false)
+Set DT42 = (new DropTarget)(sw42, sw42a, sw42p, 42, 0, false)
+Set DT43 = (new DropTarget)(sw43, sw43a, sw43p, 43, 0, false)
+Set DT44 = (new DropTarget)(sw44, sw44a, sw44p, 44, 0, false)
+Set DT45 = (new DropTarget)(sw45, sw45a, sw45p, 45, 0, false)
+Set DT46 = (new DropTarget)(sw46, sw46a, sw46p, 46, 0, false)
+Set DT47 = (new DropTarget)(sw47, sw47a, sw47p, 47, 0, false)
+Set DT48 = (new DropTarget)(sw48, sw48a, sw48p, 48, 0, false)
@@ -2105,3 +2138,3 @@
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -2120 +2153 @@
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
@@ -2128 +2161 @@
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
@@ -2135 +2168 @@
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -2190 +2223 @@
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
@@ -2246 +2279 @@
-			DTArray(ind)(5) = true 'Mark target as dropped
+			DTArray(ind).isDropped = true 'Mark target as dropped
@@ -2304 +2337 @@
-		DTArray(ind)(5) = false 'Mark target as not dropped
+		DTArray(ind).isDropped = false 'Mark target as not dropped
@@ -2375,0 +2409,25 @@
+Class StandupTarget
+  Private m_primary, m_prim, m_sw, m_animate
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public default Function init(primary, prim, sw, animate)
+    Set m_primary = primary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -2395,3 +2453,3 @@
-ST27 = Array(sw27, psw27,27, 0)
-ST28 = Array(sw28, psw28,28, 0)
-ST33 = Array(sw33, psw33,33, 0)
+Set ST27 = (new StandupTarget)(sw27, psw27,27, 0)
+Set ST28 = (new StandupTarget)(sw28, psw28,28, 0)
+Set ST33 = (new StandupTarget)(sw33, psw33,33, 0)
@@ -2418 +2476 @@
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
@@ -2420,2 +2478,2 @@
-	If STArray(i)(3) <> 0 Then
-		DTBallPhysics Activeball, STArray(i)(0).orientation, STMass
+	If STArray(i).animate <> 0 Then
+		DTBallPhysics Activeball, STArray(i).primary.orientation, STMass
@@ -2429 +2487 @@
-		If STArray(i)(2) = switch Then STArrayID = i:Exit Function 
+		If STArray(i).sw = switch Then STArrayID = i:Exit Function 
@@ -2458 +2516 @@
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
