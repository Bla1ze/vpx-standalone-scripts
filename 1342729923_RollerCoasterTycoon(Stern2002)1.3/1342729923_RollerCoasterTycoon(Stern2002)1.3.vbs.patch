--- 1342729923_RollerCoasterTycoon(Stern2002)1.3.vbs.original
+++ 1342729923_RollerCoasterTycoon(Stern2002)1.3.vbs
@@ -3170,0 +3171,33 @@
+Class DropTarget
+  Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+  Public Property Let Secondary(input): Set m_secondary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+  Public Property Let IsDropped(input): m_isDropped = input: End Property
+
+  Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+    Set m_primary = primary
+    Set m_secondary = secondary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_isDropped = isDropped
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -3188,0 +3222 @@
+'       isDropped:  Boolean which determines whether a drop target is dropped. Set to false if they are initially raised, true if initially dropped.
@@ -3190,4 +3224,4 @@
-DT30 = Array(sw30, sw30a, sw30p, 30, 0)
-DT31 = Array(sw31, sw31a, sw31p, 31, 0)
-DT32 = Array(sw32, sw32a, sw32p, 32, 0)
-DT39 = Array(sw39, sw39a, sw39p, 39, 0)
+Set DT30 = (new DropTarget)(sw30, sw30a, sw30p, 30, 0, false)
+Set DT31 = (new DropTarget)(sw31, sw31a, sw31p, 31, 0, false)
+Set DT32 = (new DropTarget)(sw32, sw32a, sw32p, 32, 0, false)
+Set DT39 = (new DropTarget)(sw39, sw39a, sw39p, 39, 0, false)
@@ -3226,3 +3260,3 @@
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -3237 +3271 @@
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
@@ -3245 +3279 @@
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
@@ -3252 +3286 @@
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -3307 +3341 @@
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
