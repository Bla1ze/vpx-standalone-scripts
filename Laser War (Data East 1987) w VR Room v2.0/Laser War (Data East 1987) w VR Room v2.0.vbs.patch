--- ./Laser War (Data East 1987) w VR Room v2.0/Laser War (Data East 1987) w VR Room v2.0.vbs.original	2023-06-04 22:21:55
+++ ./Laser War (Data East 1987) w VR Room v2.0/Laser War (Data East 1987) w VR Room v2.0.vbs	2023-06-21 23:01:10
@@ -1409,7 +1409,7 @@
 Sub SolGI(IsOff)
 	If EnableGI = 0 And Not isGIOn Then gilvl = 0 : Exit Sub
 
-	If isGIOn <> Not IsOff Then
+	If isGIOn <> (Not IsOff) Then
 		isGIOn = Not IsOff
 		If isGIOn Then
 			' GI goes on
@@ -2670,9 +2670,9 @@
 	Private Sub Class_Initialize : redim ballvel(0) : redim ballvelx(0): redim ballvely(0) : End Sub 
 
 	Public Sub Update()	'tracks in-ball-velocity
-		dim str, b, highestID
+		dim str, b, AllBalls, highestID : allBalls = getballs
 
-		for each b in gBOT
+		for each b in allBalls
 			if b.id >= HighestID then highestID = b.id
 		Next
 
@@ -2680,7 +2680,7 @@
 		if uBound(ballvelx) < highestID then redim ballvelx(highestID)	'set bounds
 		if uBound(ballvely) < highestID then redim ballvely(highestID)	'set bounds
 
-		for each b in gBOT
+		for each b in allBalls
 			ballvel(b.id) = BallSpeed(b)
 			ballvelx(b.id) = b.velx
 			ballvely(b.id) = b.vely
@@ -2991,7 +2991,32 @@
 '		STAND-UP TARGET INITIALIZATION
 '******************************************************
 
+Class StandupTarget
+  Private m_primary, m_prim, m_sw, m_animate
 
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public default Function init(primary, prim, sw, animate)
+    Set m_primary = primary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+
+    Set Init = Me
+  End Function
+End Class
+
+
 'Define a variable for each stand-up target
 
 
@@ -3012,15 +3037,15 @@
 'these are inclined primitives to simulate hitting a bent target and should provide so z velocity on high speed impacts
 
 
-ST22 = Array(sw22, psw22,22, 0)
-ST23 = Array(sw23, psw23,23, 0)
-ST24 = Array(sw24, psw24,24, 0)
-ST30 = Array(sw30, psw30,30, 0)
-ST31 = Array(sw31, psw31,31, 0)
-ST32 = Array(sw32, psw32,32, 0)
-ST35 = Array(sw35, psw35,35, 0)
-ST36 = Array(sw36, psw36,36, 0)
-ST37 = Array(sw37, psw37,37, 0)
+Set ST22 = (new StandupTarget)(sw22, psw22,22, 0)
+Set ST23 = (new StandupTarget)(sw23, psw23,23, 0)
+Set ST24 = (new StandupTarget)(sw24, psw24,24, 0)
+Set ST30 = (new StandupTarget)(sw30, psw30,30, 0)
+Set ST31 = (new StandupTarget)(sw31, psw31,31, 0)
+Set ST32 = (new StandupTarget)(sw32, psw32,32, 0)
+Set ST35 = (new StandupTarget)(sw35, psw35,35, 0)
+Set ST36 = (new StandupTarget)(sw36, psw36,36, 0)
+Set ST37 = (new StandupTarget)(sw37, psw37,37, 0)
 
 'Add all the Stand-up Target Arrays to Stand-up Target Animation Array
 ' STAnimationArray = Array(ST1, ST2, ....)
@@ -3045,10 +3070,10 @@
 	i = STArrayID(switch)
 
 	PlayTargetSound
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
 
-	If STArray(i)(3) <> 0 Then
-		DTBallPhysics Activeball, STArray(i)(0).orientation, STMass
+	If STArray(i).animate <> 0 Then
+		DTBallPhysics Activeball, STArray(i).primary.orientation, STMass
 	End If
 	DoSTAnim
 End Sub
@@ -3056,7 +3081,7 @@
 Function STArrayID(switch)
 	Dim i
 	For i = 0 to uBound(STArray) 
-		If STArray(i)(2) = switch Then STArrayID = i:Exit Function 
+		If STArray(i).sw = switch Then STArrayID = i:Exit Function 
 	Next
 End Function
 
@@ -3085,7 +3110,7 @@
 Sub DoSTAnim()
 	Dim i
 	For i=0 to Ubound(STArray)
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
 	Next
 End Sub
 
