--- TX-Sector (Gottlieb 1988) SG1bsoN Mod V1.1.vbs.original
+++ TX-Sector (Gottlieb 1988) SG1bsoN Mod V1.1.vbs
@@ -811,0 +812,33 @@
+Class DropTarget
+  Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+  Public Property Let Secondary(input): Set m_secondary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+  Public Property Let IsDropped(input): m_isDropped = input: End Property
+
+  Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+    Set m_primary = primary
+    Set m_secondary = secondary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_isDropped = isDropped
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -831,9 +864,9 @@
-DT40 = Array(sw40, sw40y, sw40p, 40, 0)
-DT41 = Array(sw41, sw41y, sw41p, 41, 0)
-DT42 = Array(sw42, sw42y, sw42p, 42, 0)
-DT50 = Array(sw50, sw50y, sw50p, 50, 0)
-DT51 = Array(sw51, sw51y, sw51p, 51, 0)
-DT60 = Array(sw60, sw60y, sw60p, 60, 0)
-DT61 = Array(sw61, sw61y, sw61p, 61, 0)
-DT70 = Array(sw70, sw70y, sw70p, 70, 0)
-DT71 = Array(sw71, sw71y, sw71p, 71, 0)
+Set DT40 = (new DropTarget)(sw40, sw40y, sw40p, 40, 0, false)
+Set DT41 = (new DropTarget)(sw41, sw41y, sw41p, 41, 0, false)
+Set DT42 = (new DropTarget)(sw42, sw42y, sw42p, 42, 0, false)
+Set DT50 = (new DropTarget)(sw50, sw50y, sw50p, 50, 0, false)
+Set DT51 = (new DropTarget)(sw51, sw51y, sw51p, 51, 0, false)
+Set DT60 = (new DropTarget)(sw60, sw60y, sw60p, 60, 0, false)
+Set DT61 = (new DropTarget)(sw61, sw61y, sw61p, 61, 0, false)
+Set DT70 = (new DropTarget)(sw70, sw70y, sw70p, 70, 0, false)
+Set DT71 = (new DropTarget)(sw71, sw71y, sw71p, 71, 0, false)
@@ -869,3 +902,3 @@
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -880 +913 @@
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
@@ -888 +921 @@
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
@@ -895 +928 @@
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -948 +981 @@
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
@@ -3549 +3582 @@
-		if x = uBound(RampBalls) then 	'debug
+		'if x = uBound(RampBalls) then 	'debug
@@ -3552,7 +3585,7 @@
-			Typename(RampBalls(1, 0)) & " ID:" & RampBalls(1, 1) & "type:" & RampType(1) & vbnewline & _
-			Typename(RampBalls(2, 0)) & " ID:" & RampBalls(2, 1) & "type:" & RampType(2) & vbnewline & _
-			Typename(RampBalls(3, 0)) & " ID:" & RampBalls(3, 1) & "type:" & RampType(3) & vbnewline & _
-			Typename(RampBalls(4, 0)) & " ID:" & RampBalls(4, 1) & "type:" & RampType(4) & vbnewline & _
-			Typename(RampBalls(5, 0)) & " ID:" & RampBalls(5, 1) & "type:" & RampType(5) & vbnewline & _
-			" "
-		End If
+			'Typename(RampBalls(1, 0)) & " ID:" & RampBalls(1, 1) & "type:" & RampType(1) & vbnewline & _
+			'Typename(RampBalls(2, 0)) & " ID:" & RampBalls(2, 1) & "type:" & RampType(2) & vbnewline & _
+			'Typename(RampBalls(3, 0)) & " ID:" & RampBalls(3, 1) & "type:" & RampType(3) & vbnewline & _
+			'Typename(RampBalls(4, 0)) & " ID:" & RampBalls(4, 1) & "type:" & RampType(4) & vbnewline & _
+			'Typename(RampBalls(5, 0)) & " ID:" & RampBalls(5, 1) & "type:" & RampType(5) & vbnewline & _
+			'" "
+		'End If
