--- ./Iron Man Vault Edition (Stern 2010) VPW v1.0/Iron Man Vault Edition (Stern 2010) VPW v1.0.vbs.original	2023-06-04 20:28:19
+++ ./Iron Man Vault Edition (Stern 2010) VPW v1.0/Iron Man Vault Edition (Stern 2010) VPW v1.0.vbs	2023-06-04 20:28:10
@@ -3280,7 +3280,7 @@
 	Private Sub Class_Initialize : redim ballvel(0) : redim ballvelx(0): redim ballvely(0) : End Sub 
 
 	Public Sub Update()	'tracks in-ball-velocity
-		dim str, b, AllBalls, highestID : allBalls = gBOT
+		dim str, b, AllBalls, highestID : allBalls = getballs
 
 		for each b in allballs
 			if b.id >= HighestID then highestID = b.id
@@ -3377,7 +3377,32 @@
 '******************************************************
 '		STAND-UP TARGET INITIALIZATION
 '******************************************************
+
+Class StandupTarget
+  Private m_primary, m_prim, m_sw, m_animate
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
 
+  Public default Function init(primary, prim, sw, animate)
+    Set m_primary = primary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+
+    Set Init = Me
+  End Function
+End Class
+
 'Define a variable for each stand-up target
 Dim ST33, ST34, ST35, ST36, ST40, ST41, ST42, ST44, ST45, ST46, ST47, ST48, ST50
 
@@ -3394,19 +3419,19 @@
 'You will also need to add a secondary hit object for each stand up (name sw11o, sw12o, and sw13o on the example Table1)
 'these are inclined primitives to simulate hitting a bent target and should provide so z velocity on high speed impacts
 
-ST33 = Array(sw33, sw33_BM_Dark_Room,33,0)
-ST34 = Array(sw34, sw34_BM_Dark_Room,34,0)
-ST35 = Array(sw35, sw35_BM_Dark_Room,35,0)
-ST36 = Array(sw36, sw36_BM_Dark_Room,36,0)
-ST40 = Array(sw40, sw40_BM_Dark_Room,40,0)
-ST41 = Array(sw41, sw41_BM_Dark_Room,41,0)
-ST42 = Array(sw42, sw42_BM_Dark_Room,42,0)
-ST44 = Array(sw44, sw44_BM_Dark_Room,44,0)
-ST45 = Array(sw45, sw45_BM_Dark_Room,45,0)
-ST46 = Array(sw46, sw46_BM_Dark_Room,46,0)
-ST47 = Array(sw47, sw47_BM_Dark_Room,47,0)
-ST48 = Array(sw48, sw48_BM_Dark_Room,48,0)
-ST50 = Array(sw50, sw50_BM_Dark_Room,50,0)
+Set ST33 = (new StandupTarget)(sw33, sw33_BM_Dark_Room,33,0)
+Set ST34 = (new StandupTarget)(sw34, sw34_BM_Dark_Room,34,0)
+Set ST35 = (new StandupTarget)(sw35, sw35_BM_Dark_Room,35,0)
+Set ST36 = (new StandupTarget)(sw36, sw36_BM_Dark_Room,36,0)
+Set ST40 = (new StandupTarget)(sw40, sw40_BM_Dark_Room,40,0)
+Set ST41 = (new StandupTarget)(sw41, sw41_BM_Dark_Room,41,0)
+Set ST42 = (new StandupTarget)(sw42, sw42_BM_Dark_Room,42,0)
+Set ST44 = (new StandupTarget)(sw44, sw44_BM_Dark_Room,44,0)
+Set ST45 = (new StandupTarget)(sw45, sw45_BM_Dark_Room,45,0)
+Set ST46 = (new StandupTarget)(sw46, sw46_BM_Dark_Room,46,0)
+Set ST47 = (new StandupTarget)(sw47, sw47_BM_Dark_Room,47,0)
+Set ST48 = (new StandupTarget)(sw48, sw48_BM_Dark_Room,48,0)
+Set ST50 = (new StandupTarget)(sw50, sw50_BM_Dark_Room,50,0)
 
 'Add all the Stand-up Target Arrays to Stand-up Target Animation Array
 ' STAnimationArray = Array(ST1, ST2, ....)
@@ -3428,10 +3453,10 @@
 	i = STArrayID(switch)
 
 	PlayTargetSound
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
 
-	If STArray(i)(3) <> 0 Then
-		DTBallPhysics Activeball, STArray(i)(0).orientation, STMass
+	If STArray(i).animate <> 0 Then
+		DTBallPhysics Activeball, STArray(i).primary.orientation, STMass
 	End If
 	DoSTAnim
 End Sub
@@ -3439,7 +3464,7 @@
 Function STArrayID(switch)
 	Dim i
 	For i = 0 to uBound(STArray) 
-		If STArray(i)(2) = switch Then STArrayID = i:Exit Function 
+		If STArray(i).sw = switch Then STArrayID = i:Exit Function 
 	Next
 End Function
 
@@ -3468,7 +3493,7 @@
 Sub DoSTAnim()
 	Dim i
 	For i=0 to Ubound(STArray)
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
 	Next
 End Sub
 
