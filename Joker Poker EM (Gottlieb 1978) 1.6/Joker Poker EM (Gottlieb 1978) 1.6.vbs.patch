--- Joker Poker EM (Gottlieb 1978) 1.6.vbs.original
+++ Joker Poker EM (Gottlieb 1978) 1.6.vbs
@@ -2950,0 +2951,33 @@
+Class DropTarget
+  Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+  Public Property Let Secondary(input): Set m_secondary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+  Public Property Let IsDropped(input): m_isDropped = input: End Property
+
+  Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+    Set m_primary = primary
+    Set m_secondary = secondary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_isDropped = isDropped
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -2970,15 +3003,15 @@
-DTA1v = Array(DTA1, DTA1a, DTA1p, 1, 0)
-DTA2v = Array(DTA2, DTA2a, DTA2p, 2, 0)
-DTJKv = Array(DTJK, DTJKa, DTJKp, 3, 0)
-DTA3v = Array(DTA3, DTA3a, DTA3p, 4, 0)
-DTA4v = Array(DTA4, DTA4a, DTA4p, 5, 0)
-DT10v = Array(DT10, DT10a, DT10p, 6, 0)
-DTJ1v = Array(DTJ1, DTJ1a, DTJ1p, 7, 0)
-DTJ2v = Array(DTJ2, DTJ2a, DTJ2p, 8, 0)
-DTQ1v = Array(DTQ1, DTQ1a, DTQ1p, 9, 0)
-DTQ2v = Array(DTQ2, DTQ2a, DTQ2p, 10, 0)
-DTQ3v = Array(DTQ3, DTQ3a, DTQ3p, 11, 0)
-DTK1v = Array(DTK1, DTK1a, DTK1p, 12, 0)
-DTK2v = Array(DTK2, DTK2a, DTK2p, 13, 0)
-DTK3v = Array(DTK3, DTK3a, DTK3p, 14, 0)
-DTK4v = Array(DTK4, DTK4a, DTK4p, 15, 0)
+Set DTA1v = (new DropTarget)(DTA1, DTA1a, DTA1p, 1, 0, false)
+Set DTA2v = (new DropTarget)(DTA2, DTA2a, DTA2p, 2, 0, false)
+Set DTJKv = (new DropTarget)(DTJK, DTJKa, DTJKp, 3, 0, false)
+Set DTA3v = (new DropTarget)(DTA3, DTA3a, DTA3p, 4, 0, false)
+Set DTA4v = (new DropTarget)(DTA4, DTA4a, DTA4p, 5, 0, false)
+Set DT10v = (new DropTarget)(DT10, DT10a, DT10p, 6, 0, false)
+Set DTJ1v = (new DropTarget)(DTJ1, DTJ1a, DTJ1p, 7, 0, false)
+Set DTJ2v = (new DropTarget)(DTJ2, DTJ2a, DTJ2p, 8, 0, false)
+Set DTQ1v = (new DropTarget)(DTQ1, DTQ1a, DTQ1p, 9, 0, false)
+Set DTQ2v = (new DropTarget)(DTQ2, DTQ2a, DTQ2p, 10, 0, false)
+Set DTQ3v = (new DropTarget)(DTQ3, DTQ3a, DTQ3p, 11, 0, false)
+Set DTK1v = (new DropTarget)(DTK1, DTK1a, DTK1p, 12, 0, false)
+Set DTK2v = (new DropTarget)(DTK2, DTK2a, DTK2p, 13, 0, false)
+Set DTK3v = (new DropTarget)(DTK3, DTK3a, DTK3p, 14, 0, false)
+Set DTK4v = (new DropTarget)(DTK4, DTK4a, DTK4p, 15, 0, false)
@@ -3018,3 +3051,3 @@
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -3030 +3063 @@
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
@@ -3038 +3071 @@
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
@@ -3045 +3078 @@
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -3100 +3133 @@
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
