--- Saving Wallden.vbs.original
+++ Saving Wallden.vbs
@@ -9390 +9390 @@
-		
+		Dim i: i = data.Item(mName)
@@ -9394 +9394 @@
-			loopCountToUse = data.Item(mName)(0)
+			loopCountToUse = i(0)
@@ -9399 +9399 @@
-			volumeToUse = data.Item(mName)(1)
+			volumeToUse = i(1)
@@ -9404 +9404 @@
-			fadeToUse = data.Item(mName)(2)
+			fadeToUse = i(2)
@@ -9413 +9413,2 @@
-					fadeOutToUse = data.Item(nowPlaying)(3)
+					Dim np: np = data.Item(nowPlaying)
+					fadeOutToUse = np(3)
@@ -9452 +9453,2 @@
-			fadeOutToUse = data.Item(nowPlaying)(2)
+			Dim np: np = data.Item(nowPlaying)
+			fadeOutToUse = np(2)
@@ -9734,0 +9737 @@
+			Dim i: i = data.Item(key)
@@ -9736,2 +9739,2 @@
-			totalTimeElapsed = data.Item(key)(2) + timeElapsed
-			timeRemaining = data.Item(key)(3) - totalTimeElapsed
+			totalTimeElapsed = i(2) + timeElapsed
+			timeRemaining = i(3) - totalTimeElapsed
@@ -9739 +9742 @@
-			If totalTimeElapsed > data.Item(key)(3) Then totalTimeElapsed = data.Item(key)(3)
+			If totalTimeElapsed > i(3) Then totalTimeElapsed = i(3)
@@ -9742,2 +9745,2 @@
-			valueDifference = Abs(data.Item(key)(0) - data.Item(key)(1))
-			If data.Item(key)(3) <= 0 Then ' Division by zero / negative duration protection
+			valueDifference = Abs(i(0) - i(1))
+			If i(3) <= 0 Then ' Division by zero / negative duration protection
@@ -9746 +9749 @@
-				percentProgress = totalTimeElapsed / data.Item(key)(3)
+				percentProgress = totalTimeElapsed / i(3)
@@ -9748,2 +9751,2 @@
-			If data.Item(key)(0) > data.Item(key)(1) Then ' Decreasing the value over time
-				newValue = data.Item(key)(0) - (valueDifference * percentProgress)
+			If i(0) > i(1) Then ' Decreasing the value over time
+				newValue = i(0) - (valueDifference * percentProgress)
@@ -9751 +9754 @@
-				newValue = data.Item(key)(0) + (valueDifference * percentProgress)
+				newValue = i(0) + (valueDifference * percentProgress)
@@ -9755 +9758 @@
-			data.Item(key) = Array(data.Item(key)(0), data.Item(key)(1), totalTimeElapsed, data.Item(key)(3))
+			data.Item(key) = Array(i(0), i(1), totalTimeElapsed, i(3))
@@ -14866 +14869,2 @@
-					adjustHP Health.HP("heal.dropTargets.completed")(dataGame.data.Item("gameDifficulty"))
+					Dim hpCompleted: hpCompleted = Health.HP("heal.dropTargets.completed")
+					adjustHP hpCompleted(dataGame.data.Item("gameDifficulty"))
@@ -14873 +14877,2 @@
-					adjustHP Health.HP("heal.dropTargets.bonus")(dataGame.data.Item("gameDifficulty"))
+					Dim hpBonus: hpBonus = Health.HP("heal.dropTargets.bonus")
+					adjustHP hpBonus(dataGame.data.Item("gameDifficulty"))
@@ -16288,3 +16293,6 @@
-	dataPlayer(currentPlayers - 1).data.Item("HP") = Health.HP("start")(gameDifficulty)
-	dataPlayer(currentPlayers - 1).data.Item("drainDamage") = Health.drainDamage("start")(gameDifficulty)
-	dataPlayer(currentPlayers - 1).data.Item("AC") = Health.AC("start")(gameDifficulty)
+	Dim startingHP: startingHP = Health.HP("start")
+	dataPlayer(currentPlayers - 1).data.Item("HP") = startingHP(gameDifficulty)
+	Dim startingDrainDamage: startingDrainDamage = Health.drainDamage("start")
+	dataPlayer(currentPlayers - 1).data.Item("drainDamage") = startingDrainDamage(gameDifficulty)
+	Dim startingAC: startingAC = Health.AC("start")
+	dataPlayer(currentPlayers - 1).data.Item("AC") = startingAC(gameDifficulty)
