--- Judge Dredd (Bally 1993) VPW v1.1.vbs.original
+++ Judge Dredd (Bally 1993) VPW v1.1.vbs
@@ -3047,0 +3048,33 @@
+Class DropTarget
+  Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+  Public Property Let Secondary(input): Set m_secondary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+  Public Property Let IsDropped(input): m_isDropped = input: End Property
+
+  Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+    Set m_primary = primary
+    Set m_secondary = secondary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_isDropped = isDropped
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -3065,0 +3099 @@
+'       isDropped:  Boolean which determines whether a drop target is dropped. Set to false if they are initially raised, true if initially dropped.
@@ -3067,5 +3101,5 @@
-DT54 = Array(sw54, sw54off, sw54prim, 54, 0)
-DT55 = Array(sw55, sw55off, sw55prim, 55, 0)
-DT56 = Array(sw56, sw56off, sw56prim, 56, 0)
-DT57 = Array(sw57, sw57off, sw57prim, 57, 0)
-DT58 = Array(sw58, sw58off, sw58prim, 58, 0)
+Set DT54 = (new DropTarget)(sw54, sw54off, sw54prim, 54, 0, false)
+Set DT55 = (new DropTarget)(sw55, sw55off, sw55prim, 55, 0, false)
+Set DT56 = (new DropTarget)(sw56, sw56off, sw56prim, 56, 0, false)
+Set DT57 = (new DropTarget)(sw57, sw57off, sw57prim, 57, 0, false)
+Set DT58 = (new DropTarget)(sw58, sw58off, sw58prim, 58, 0, false)
@@ -3101,3 +3135,3 @@
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -3112 +3146 @@
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
@@ -3120 +3154 @@
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
@@ -3127 +3161 @@
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -3185 +3219 @@
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
@@ -3307,0 +3342,29 @@
+Class StandupTarget
+  Private m_primary, m_prim, m_sw, m_animate, m_target
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get Target(): Target = m_target: End Property
+  Public Property Let Target(input): m_target = input: End Property
+
+  Public default Function init(primary, prim, sw, animate, target)
+    Set m_primary = primary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_target = target
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -3322,7 +3385,7 @@
-ST18 = Array(sw18, sw18p, 18, 0, 180)
-ST18a = Array(sw18a, sw18ap, 18, 0, 181)
-ST18b = Array(sw18b, sw18bp, 18, 0, 182)
-ST25 = Array(sw25, sw25p, 25, 0, 25)
-ST27 = Array(sw27, sw27p, 27, 0, 27)
-ST36 = Array(sw36, sw36p, 36, 0, 36)
-ST68 = Array(sw68, sw68p, 68, 0, 68)
+Set ST18 = (new StandupTarget)(sw18, sw18p, 18, 0, 180)
+Set ST18a = (new StandupTarget)(sw18a, sw18ap, 18, 0, 181)
+Set ST18b = (new StandupTarget)(sw18b, sw18bp, 18, 0, 182)
+Set ST25 = (new StandupTarget)(sw25, sw25p, 25, 0, 25)
+Set ST27 = (new StandupTarget)(sw27, sw27p, 27, 0, 27)
+Set ST36 = (new StandupTarget)(sw36, sw36p, 36, 0, 36)
+Set ST68 = (new StandupTarget)(sw68, sw68p, 68, 0, 68)
@@ -3350 +3413 @@
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
@@ -3352,2 +3415,2 @@
-	If STArray(i)(3) <> 0 Then
-		DTBallPhysics Activeball, STArray(i)(0).orientation, STMass
+	If STArray(i).animate <> 0 Then
+		DTBallPhysics Activeball, STArray(i).primary.orientation, STMass
@@ -3361 +3424 @@
-		If STArray(i)(4) = switch Then STArrayID = i:Exit Function 
+		If STArray(i).target = switch Then STArrayID = i:Exit Function 
@@ -3385 +3448 @@
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
