--- Robocop (Data East 1989)_drakkon(mod_1.2).vbs.original
+++ Robocop (Data East 1989)_drakkon(mod_1.2).vbs
@@ -2459,0 +2460,25 @@
+Class StandupTarget
+  Private m_primary, m_prim, m_sw, m_animate
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public default Function init(primary, prim, sw, animate)
+    Set m_primary = primary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -2476,8 +2501,8 @@
-ST33 = Array(sw33, PrimT33, 33, 0)
-ST34 = Array(sw34, PrimT34, 34, 0)
-ST35 = Array(sw35, PrimT35, 35, 0)
-ST36 = Array(sw36, PrimT36, 36, 0)
-ST41 = Array(sw41, PrimT41, 41, 0)
-ST42 = Array(sw42, PrimT42, 42, 0)
-ST43 = Array(sw43, PrimT43, 43, 0)
-ST23 = Array(sw23, PrimT23, 23, 0)
+Set ST33 = (new StandupTarget)(sw33, PrimT33, 33, 0)
+Set ST34 = (new StandupTarget)(sw34, PrimT34, 34, 0)
+Set ST35 = (new StandupTarget)(sw35, PrimT35, 35, 0)
+Set ST36 = (new StandupTarget)(sw36, PrimT36, 36, 0)
+Set ST41 = (new StandupTarget)(sw41, PrimT41, 41, 0)
+Set ST42 = (new StandupTarget)(sw42, PrimT42, 42, 0)
+Set ST43 = (new StandupTarget)(sw43, PrimT43, 43, 0)
+Set ST23 = (new StandupTarget)(sw23, PrimT23, 23, 0)
@@ -2509 +2534 @@
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
@@ -2511,2 +2536,2 @@
-	If STArray(i)(3) <> 0 Then
-		DTBallPhysics Activeball, STArray(i)(0).orientation, STMass
+	If STArray(i).animate <> 0 Then
+		DTBallPhysics Activeball, STArray(i).primary.orientation, STMass
@@ -2520 +2545 @@
-		If STArray(i)(2) = switch Then STArrayID = i:Exit Function 
+		If STArray(i).sw = switch Then STArrayID = i:Exit Function 
@@ -2549 +2574 @@
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
@@ -2616,0 +2642,34 @@
+Class DropTarget
+	Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+  
+	Public Property Get Primary(): Set Primary = m_primary: End Property
+	Public Property Let Primary(input): Set m_primary = input: End Property
+  
+	Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+	Public Property Let Secondary(input): Set m_secondary = input: End Property
+  
+	Public Property Get Prim(): Set Prim = m_prim: End Property
+	Public Property Let Prim(input): Set m_prim = input: End Property
+  
+	Public Property Get Sw(): Sw = m_sw: End Property
+	Public Property Let Sw(input): m_sw = input: End Property
+  
+	Public Property Get Animate(): Animate = m_animate: End Property
+	Public Property Let Animate(input): m_animate = input: End Property
+  
+	Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+	Public Property Let IsDropped(input): m_isDropped = input: End Property
+  
+	Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+	  Set m_primary = primary
+	  Set m_secondary = secondary
+	  Set m_prim = prim
+	  m_sw = sw
+	  m_animate = animate
+	  m_isDropped = isDropped
+  
+	  Set Init = Me
+	End Function
+  End Class
+  
+
@@ -2622,3 +2681,3 @@
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -2633 +2692 @@
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
@@ -2641 +2700 @@
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
@@ -2648 +2707 @@
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -2703 +2762 @@
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
