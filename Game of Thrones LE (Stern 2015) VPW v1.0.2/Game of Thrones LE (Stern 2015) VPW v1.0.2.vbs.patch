--- Game of Thrones LE (Stern 2015) VPW v1.0.2.vbs.original
+++ Game of Thrones LE (Stern 2015) VPW v1.0.2.vbs
@@ -8963 +8963 @@
-                AddScore (BonusCnt * BonusMultiplier(CurrentPlayer))+BonusHeldPoints(CurrentPlayer)
+                AddScore ((BonusCnt * BonusMultiplier(CurrentPlayer))+BonusHeldPoints(CurrentPlayer))
@@ -15454 +15454 @@
-                    .SetAlignedPosition (i-1)*25,31,FlexDMD_Align_BottomLeft
+                    .SetAlignedPosition ((i-1)*25),31,FlexDMD_Align_BottomLeft
@@ -15600,0 +15601,33 @@
+Class DropTarget
+  Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+  Public Property Let Secondary(input): Set m_secondary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+  Public Property Let IsDropped(input): m_isDropped = input: End Property
+
+  Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+    Set m_primary = primary
+    Set m_secondary = secondary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_isDropped = isDropped
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -15620,4 +15653,4 @@
-DT7 = Array(target7, target7a, T7_BM_Dark_Room, 1, 0, false)
-DT8 = Array(target8, target8a, T8_BM_Dark_Room, 2, 0, false)
-DT9 = Array(target9, target9a, T9_BM_Dark_Room, 3, 0, false)
-DT90= Array(target90, target90a, T90_BM_Dark_Room,  4, 0, true)
+Set DT7 = (new DropTarget)(target7, target7a, T7_BM_Dark_Room, 1, 0, false)
+Set DT8 = (new DropTarget)(target8, target8a, T8_BM_Dark_Room, 2, 0, false)
+Set DT9 = (new DropTarget)(target9, target9a, T9_BM_Dark_Room, 3, 0, false)
+Set DT90= (new DropTarget)(target90, target90a, T90_BM_Dark_Room,  4, 0, true)
@@ -15655,4 +15688,4 @@
-    debug.print "dthit "&i&" pre-state: "&DTArray(i)(4)
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+    debug.print "dthit "&i&" pre-state: "&DTArray(i).animate
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -15660 +15693 @@
-    debug.print "post-state: "&DTArray(i)(4)
+    debug.print "post-state: "&DTArray(i).animate
@@ -15668 +15701 @@
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
@@ -15676 +15709 @@
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
@@ -15683 +15716 @@
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -15738 +15771 @@
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
@@ -15794 +15827 @@
-			DTArray(ind)(5) = true 'Mark target as dropped
+			DTArray(ind).isDropped = true 'Mark target as dropped
@@ -15849 +15882 @@
-		DTArray(ind)(5) = false 'Mark target as not dropped
+		DTArray(ind).isDropped = false 'Mark target as not dropped
@@ -15918,0 +15952,25 @@
+Class StandupTarget
+  Private m_primary, m_prim, m_sw, m_animate
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public default Function init(primary, prim, sw, animate)
+    Set m_primary = primary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -15935,10 +15993,10 @@
-ST04 = Array(Target32, targets_004_BM_Dark_Room, 4,  0)
-ST05 = Array(Target33, targets_005_BM_Dark_Room, 5,  0)
-ST06 = Array(Target34, targets_006_BM_Dark_Room, 6,  0)
-ST07 = Array(Target35, targets_007_BM_Dark_Room, 7,  0)
-ST08 = Array(Target36, targets_008_BM_Dark_Room, 8,  0)
-ST09 = Array(Target43, targets_009_BM_Dark_Room, 9,  0)
-ST10 = Array(Target44, targets_010_BM_Dark_Room, 10, 0)
-ST11 = Array(Target82, targets_011_BM_Dark_Room, 11, 0)
-ST12 = Array(Target81, targets_012_BM_Dark_Room, 12, 0)
-ST13 = Array(Target80, targets_BM_Dark_Room    , 13, 0)
+Set ST04 = (new StandupTarget)(Target32, targets_004_BM_Dark_Room, 4,  0)
+Set ST05 = (new StandupTarget)(Target33, targets_005_BM_Dark_Room, 5,  0)
+Set ST06 = (new StandupTarget)(Target34, targets_006_BM_Dark_Room, 6,  0)
+Set ST07 = (new StandupTarget)(Target35, targets_007_BM_Dark_Room, 7,  0)
+Set ST08 = (new StandupTarget)(Target36, targets_008_BM_Dark_Room, 8,  0)
+Set ST09 = (new StandupTarget)(Target43, targets_009_BM_Dark_Room, 9,  0)
+Set ST10 = (new StandupTarget)(Target44, targets_010_BM_Dark_Room, 10, 0)
+Set ST11 = (new StandupTarget)(Target82, targets_011_BM_Dark_Room, 11, 0)
+Set ST12 = (new StandupTarget)(Target81, targets_012_BM_Dark_Room, 12, 0)
+Set ST13 = (new StandupTarget)(Target80, targets_BM_Dark_Room    , 13, 0)
@@ -15967 +16025 @@
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
@@ -15969 +16027 @@
-	If STArray(i)(3) <> 0 Then
+	If STArray(i).animate <> 0 Then
@@ -15971 +16029 @@
-		'DTBallPhysics Activeball, STArray(i)(0).orientation, STMass
+		'DTBallPhysics Activeball, STArray(i).primary.orientation, STMass
@@ -15979 +16037 @@
-		If STArray(i)(2) = switch Then STArrayID = i:Exit Function 
+		If STArray(i).sw = switch Then STArrayID = i:Exit Function 
@@ -16008 +16066 @@
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
