--- Atlantis (Bally 1989) w VR Room v2.0.vbs.original
+++ Atlantis (Bally 1989) w VR Room v2.0.vbs
@@ -3032 +3032 @@
-		dim str, b, highestID
+		dim str, b, AllBalls, highestID : allBalls = getballs
@@ -3034 +3034 @@
-		for each b in gBOT
+		for each b in allBalls
@@ -3042 +3042 @@
-		for each b in gBOT
+		for each b in allBalls
@@ -3357,0 +3358,34 @@
+Class DropTarget
+  Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+  Public Property Let Secondary(input): Set m_secondary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+  Public Property Let IsDropped(input): m_isDropped = input: End Property
+
+  Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+    Set m_primary = primary
+    Set m_secondary = secondary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_isDropped = isDropped
+
+    Set Init = Me
+  End Function
+End Class
+
+
@@ -3377,4 +3411,4 @@
-DT1 = Array(sw1, sw1a, sw1p, 1, 0)
-DT2 = Array(sw2, sw2a, sw2p, 2, 0)
-DT3 = Array(sw3, sw3a, sw3p, 3, 0)
-DT4 = Array(sw4, sw4a, sw4p, 4, 0)
+Set DT1 = (new DropTarget)(sw1, sw1a, sw1p, 1, 0, false)
+Set DT2 = (new DropTarget)(sw2, sw2a, sw2p, 2, 0, false)
+Set DT3 = (new DropTarget)(sw3, sw3a, sw3p, 3, 0, false)
+Set DT4 = (new DropTarget)(sw4, sw4a, sw4p, 4, 0, false)
@@ -3411,3 +3445,3 @@
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -3427 +3461 @@
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
@@ -3435 +3469 @@
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
@@ -3442 +3476 @@
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -3497 +3531 @@
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
@@ -3639,0 +3674,25 @@
+Class StandupTarget
+  Private m_primary, m_prim, m_sw, m_animate
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public default Function init(primary, prim, sw, animate)
+    Set m_primary = primary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -3656,9 +3715,9 @@
-ST25 = Array(sw25, psw25,25, 0)
-ST26 = Array(sw26, psw26,26, 0)
-ST27 = Array(sw27, psw27,27, 0)
-ST28 = Array(sw28, psw28,28, 0)
-ST29 = Array(sw29, psw29,29, 0)
-ST30 = Array(sw30, psw30,30, 0)
-ST33 = Array(sw33, psw33,33, 0)
-ST34 = Array(sw34, psw34,34, 0)
-ST35 = Array(sw35, psw35,35, 0)
+Set ST25 = (new StandupTarget)(sw25, psw25,25, 0)
+Set ST26 = (new StandupTarget)(sw26, psw26,26, 0)
+Set ST27 = (new StandupTarget)(sw27, psw27,27, 0)
+Set ST28 = (new StandupTarget)(sw28, psw28,28, 0)
+Set ST29 = (new StandupTarget)(sw29, psw29,29, 0)
+Set ST30 = (new StandupTarget)(sw30, psw30,30, 0)
+Set ST33 = (new StandupTarget)(sw33, psw33,33, 0)
+Set ST34 = (new StandupTarget)(sw34, psw34,34, 0)
+Set ST35 = (new StandupTarget)(sw35, psw35,35, 0)
@@ -3686 +3745 @@
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
@@ -3688,2 +3747,2 @@
-	If STArray(i)(3) <> 0 Then
-		DTBallPhysics Activeball, STArray(i)(0).orientation, STMass
+	If STArray(i).animate <> 0 Then
+		DTBallPhysics Activeball, STArray(i).primary.orientation, STMass
@@ -3697 +3756 @@
-		If STArray(i)(2) = switch Then STArrayID = i:Exit Function 
+		If STArray(i).sw = switch Then STArrayID = i:Exit Function 
@@ -3726 +3785 @@
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
