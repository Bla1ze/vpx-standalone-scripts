--- Gorgar_1.1.vbs.original
+++ Gorgar_1.1.vbs
@@ -2749,0 +2750,33 @@
+Class DropTarget
+  Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+  Public Property Let Secondary(input): Set m_secondary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+  Public Property Let IsDropped(input): m_isDropped = input: End Property
+
+  Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+    Set m_primary = primary
+    Set m_secondary = secondary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_isDropped = isDropped
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -2767,0 +2801,2 @@
+'
+'       isDropped:  Boolean which determines whether a drop target is dropped. Set to false if they are initially raised, true if initially dropped.
@@ -2770,6 +2805,6 @@
-DT41 = Array(sw41, sw41a, sw41p, 41, 0)
-DT42 = Array(sw42, sw42a, sw42p, 42, 0)
-DT43 = Array(sw43, sw43a, sw43p, 43, 0)
-DT18 = Array(sw18, sw18a, sw18p, 18, 0)
-DT19 = Array(sw19, sw19a, sw19p, 19, 0)
-DT20 = Array(sw20, sw20a, sw20p, 20, 0)
+Set DT41 = (new DropTarget)(sw41, sw41a, sw41p, 41, 0, false)
+Set DT42 = (new DropTarget)(sw42, sw42a, sw42p, 42, 0, false)
+Set DT43 = (new DropTarget)(sw43, sw43a, sw43p, 43, 0, false)
+Set DT18 = (new DropTarget)(sw18, sw18a, sw18p, 18, 0, false)
+Set DT19 = (new DropTarget)(sw19, sw19a, sw19p, 19, 0, false)
+Set DT20 = (new DropTarget)(sw20, sw20a, sw20p, 20, 0, false)
@@ -2808,3 +2843,3 @@
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -2819 +2854 @@
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
@@ -2827 +2862 @@
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
@@ -2834 +2869 @@
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -2889 +2924 @@
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
