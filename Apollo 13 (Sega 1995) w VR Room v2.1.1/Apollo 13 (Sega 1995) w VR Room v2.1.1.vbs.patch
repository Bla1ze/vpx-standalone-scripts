--- Apollo 13 (Sega 1995) w VR Room v2.1.1.vbs.original
+++ Apollo 13 (Sega 1995) w VR Room v2.1.1.vbs
@@ -2624,6 +2624,31 @@
 '		STAND-UP TARGET INITIALIZATION
 '******************************************************
 
+Class StandupTarget
+  Private m_primary, m_prim, m_sw, m_animate
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public default Function init(primary, prim, sw, animate)
+    Set m_primary = primary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+
+    Set Init = Me
+  End Function
+End Class
+
 'Define a variable for each stand-up target
 
 Dim ST25, ST26, ST27, ST28, ST29, ST30, ST31, ST32, ST38, ST40, ST491, ST492, ST493	'Rectangle Stand Up Targets
@@ -2642,19 +2667,19 @@
 'these are inclined primitives to simulate hitting a bent target and should provide so z velocity on high speed impacts
 
 
-ST25 = Array(sw25, psw25,25, 0)
-ST26 = Array(sw26, psw26,26, 0)
-ST27 = Array(sw27, psw27,27, 0)
-ST28 = Array(sw28, psw28,28, 0)
-ST29 = Array(sw29, psw29,29, 0)
-ST30 = Array(sw30, psw30,30, 0)
-ST31 = Array(sw31, psw31,31, 0)
-ST32 = Array(sw32, psw32,32, 0)
-ST38 = Array(sw38, psw38,38, 0)
-ST40 = Array(sw40, psw40,40, 0)
-ST491 = Array(sw49a, psw49a,49, 0)
-ST492 = Array(sw49b, psw49b,49, 0)
-ST493 = Array(sw49c, psw49c,49, 0)
+Set ST25 = (new StandupTarget)(sw25, psw25,25, 0)
+Set ST26 = (new StandupTarget)(sw26, psw26,26, 0)
+Set ST27 = (new StandupTarget)(sw27, psw27,27, 0)
+Set ST28 = (new StandupTarget)(sw28, psw28,28, 0)
+Set ST29 = (new StandupTarget)(sw29, psw29,29, 0)
+Set ST30 = (new StandupTarget)(sw30, psw30,30, 0)
+Set ST31 = (new StandupTarget)(sw31, psw31,31, 0)
+Set ST32 = (new StandupTarget)(sw32, psw32,32, 0)
+Set ST38 = (new StandupTarget)(sw38, psw38,38, 0)
+Set ST40 = (new StandupTarget)(sw40, psw40,40, 0)
+Set ST491 = (new StandupTarget)(sw49a, psw49a,49, 0)
+Set ST492 = (new StandupTarget)(sw49b, psw49b,49, 0)
+Set ST493 = (new StandupTarget)(sw49c, psw49c,49, 0)
 
 Dim STArray
 STArray = Array(ST25, ST26, ST27, ST28, ST29, ST30, ST31, ST32, ST38, ST40, ST491, ST492, ST493)
@@ -2674,10 +2699,10 @@
 	i = STArrayID(switch)
 
 	PlayTargetSound
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
 
-	If STArray(i)(3) <> 0 Then
-		DTBallPhysics Activeball, STArray(i)(0).orientation, STMass
+	If STArray(i).animate <> 0 Then
+		DTBallPhysics Activeball, STArray(i).primary.orientation, STMass
 	End If
 	DoSTAnim
 End Sub
@@ -2739,7 +2764,7 @@
 Sub DoSTAnim()
 	Dim i
 	For i=0 to Ubound(STArray)
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
 	Next
 End Sub
 
