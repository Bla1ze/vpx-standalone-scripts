--- Dracula (Stern 1979).vbs.original
+++ Dracula (Stern 1979).vbs
@@ -63 +62,0 @@
-
@@ -549,2 +547,0 @@
-dim DT12, DT20, DT21, DT28, DT29, DT36, DT37
-
@@ -2011,0 +2009,37 @@
+Class DropTarget
+  Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+  Public Property Let Secondary(input): Set m_secondary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+  Public Property Let IsDropped(input): m_isDropped = input: End Property
+
+  Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+    Set m_primary = primary
+    Set m_secondary = secondary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_isDropped = isDropped
+
+    Set Init = Me
+  End Function
+End Class
+
+'Define a variable for each drop target
+'Dim DT1, DT2, DT3, DT4, DT5, DT10, DT11, DT12
+dim DT12, DT20, DT21, DT28, DT29, DT36, DT37
+
@@ -2026,0 +2061 @@
+'       isDropped:  Boolean which determines whether a drop target is dropped. Set to false if they are initially raised, true if initially dropped.
@@ -2028,5 +2063,4 @@
-' Center Bank
-DT12 = Array(sw12, sw12y, psw12, 12, 0)
-DT20 = Array(sw20, sw20y, psw20, 20, 0)
-DT28 = Array(sw28, sw28y, psw28, 28, 0)
-DT36 = Array(sw36, sw36y, psw36, 36, 0)
+Set DT12 = (new DropTarget)(sw12, sw12y, psw12, 12, 0, false)
+Set DT20 = (new DropTarget)(sw20, sw20y, psw20, 20, 0, false)
+Set DT28 = (new DropTarget)(sw28, sw28y, psw28, 28, 0, false)
+Set DT36 = (new DropTarget)(sw36, sw36y, psw36, 36, 0, false)
@@ -2035,3 +2069,3 @@
-DT21 = Array(sw21, sw21y, psw21, 21, 0)
-DT29 = Array(sw29, sw29y, psw29, 29, 0)
-DT37 = Array(sw37, sw37y, psw37, 37, 0)
+Set DT21 = (new DropTarget)(sw21, sw21y, psw21, 21, 0, false)
+Set DT29 = (new DropTarget)(sw29, sw29y, psw29, 29, 0, false)
+Set DT37 = (new DropTarget)(sw37, sw37y, psw37, 37, 0, false)
@@ -2072,3 +2106,3 @@
-        DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-		If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-                DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+        DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+		If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+                DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -2083 +2117 @@
-        DTArray(i)(4) = -1
+        DTArray(i).animate = -1
@@ -2091 +2125 @@
-        DTArray(i)(4) = 1
+        DTArray(i).animate = 1
@@ -2098 +2132 @@
-                If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+                If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -2160 +2194 @@
-                DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+                DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
