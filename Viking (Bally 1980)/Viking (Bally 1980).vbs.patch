--- Viking (Bally 1980).vbs.original
+++ Viking (Bally 1980).vbs
@@ -2126,0 +2127,33 @@
+Class DropTarget
+	Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+  
+	Public Property Get Primary(): Set Primary = m_primary: End Property
+	Public Property Let Primary(input): Set m_primary = input: End Property
+  
+	Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+	Public Property Let Secondary(input): Set m_secondary = input: End Property
+  
+	Public Property Get Prim(): Set Prim = m_prim: End Property
+	Public Property Let Prim(input): Set m_prim = input: End Property
+  
+	Public Property Get Sw(): Sw = m_sw: End Property
+	Public Property Let Sw(input): m_sw = input: End Property
+  
+	Public Property Get Animate(): Animate = m_animate: End Property
+	Public Property Let Animate(input): m_animate = input: End Property
+  
+	Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+	Public Property Let IsDropped(input): m_isDropped = input: End Property
+  
+	Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+	  Set m_primary = primary
+	  Set m_secondary = secondary
+	  Set m_prim = prim
+	  m_sw = sw
+	  m_animate = animate
+	  m_isDropped = isDropped
+  
+	  Set Init = Me
+	End Function
+End Class
+
@@ -2147,7 +2180,7 @@
-DT17 = Array(sw17, sw17a, sw17p, 17, 0)
-DT18 = Array(sw18, sw18a, sw18p, 18, 0)
-DT19 = Array(sw19, sw19a, sw19p, 19, 0)
-DT4 = Array(sw4, sw4a, sw4p, 4, 0)
-DT3 = Array(sw3, sw3a, sw3p, 3, 0)
-DT2 = Array(sw2, sw2a, sw2p, 2, 0)
-DT1 = Array(sw1, sw1a, sw1p, 1, 0)
+Set DT17 = (new DropTarget)(sw17, sw17a, sw17p, 17, 0, false)
+Set DT18 = (new DropTarget)(sw18, sw18a, sw18p, 18, 0, false)
+Set DT19 = (new DropTarget)(sw19, sw19a, sw19p, 19, 0, false)
+Set DT4 = (new DropTarget)(sw4, sw4a, sw4p, 4, 0, false)
+Set DT3 = (new DropTarget)(sw3, sw3a, sw3p, 3, 0, false)
+Set DT2 = (new DropTarget)(sw2, sw2a, sw2p, 2, 0, false)
+Set DT1 = (new DropTarget)(sw1, sw1a, sw1p, 1, 0, false)
@@ -2185,3 +2218,3 @@
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -2196 +2229 @@
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
@@ -2204 +2237 @@
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
@@ -2211 +2244 @@
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -2266 +2299 @@
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
@@ -2464,0 +2498,25 @@
+Class StandupTarget
+	Private m_primary, m_prim, m_sw, m_animate
+  
+	Public Property Get Primary(): Set Primary = m_primary: End Property
+	Public Property Let Primary(input): Set m_primary = input: End Property
+  
+	Public Property Get Prim(): Set Prim = m_prim: End Property
+	Public Property Let Prim(input): Set m_prim = input: End Property
+  
+	Public Property Get Sw(): Sw = m_sw: End Property
+	Public Property Let Sw(input): m_sw = input: End Property
+  
+	Public Property Get Animate(): Animate = m_animate: End Property
+	Public Property Let Animate(input): m_animate = input: End Property
+  
+	Public default Function init(primary, prim, sw, animate)
+	  Set m_primary = primary
+	  Set m_prim = prim
+	  m_sw = sw
+	  m_animate = animate
+  
+	  Set Init = Me
+	End Function
+End Class
+
@@ -2481,2 +2539,2 @@
-ST25 = Array(sw25, psw25,25, 0)
-ST5 = Array(sw5, psw5,5, 0)
+Set ST25 = (new StandupTarget)(sw25, psw25,25, 0)
+Set ST5 = (new StandupTarget)(sw5, psw5,5, 0)
@@ -2504 +2562 @@
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
@@ -2506,2 +2564,2 @@
-	If STArray(i)(3) <> 0 Then
-		DTBallPhysics Activeball, STArray(i)(0).orientation, STMass
+	If STArray(i).animate <> 0 Then
+		DTBallPhysics Activeball, STArray(i).primary.orientation, STMass
@@ -2515 +2573 @@
-		If STArray(i)(2) = switch Then STArrayID = i:Exit Function 
+		If STArray(i).sw = switch Then STArrayID = i:Exit Function 
@@ -2544 +2602 @@
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
