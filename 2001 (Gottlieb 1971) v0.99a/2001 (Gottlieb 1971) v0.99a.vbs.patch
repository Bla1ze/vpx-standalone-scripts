--- 2001 (Gottlieb 1971) v0.99a.vbs.original
+++ 2001 (Gottlieb 1971) v0.99a.vbs
@@ -5027,0 +5028,32 @@
+Class DropTarget
+  Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+  Public Property Let Secondary(input): Set m_secondary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+  Public Property Let IsDropped(input): m_isDropped = input: End Property
+
+  Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+    Set m_primary = primary
+    Set m_secondary = secondary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_isDropped = isDropped
+
+    Set Init = Me
+  End Function
+End Class
@@ -5053,23 +5085,43 @@
-DT1 = Array(Red1, Red1a, Red1p, 1, 0)
-DT2 = Array(Red2, Red2a, Red2p, 2, 0)
-DT3 = Array(Red3, Red3a, Red3p, 3, 0)
-DT4 = Array(Red4, Red4a, Red4p, 4, 0)
-DT5 = Array(Red5, Red5a, Red5p, 5, 0)
-
-DT6 = Array(Blue1, Blue1a, Blue1p, 6, 0)
-DT7 = Array(Blue2, Blue2a, Blue2p, 7, 0)
-DT8 = Array(Blue3, Blue3a, Blue3p, 8, 0)
-DT9 = Array(Blue4, Blue4a, Blue4p, 9, 0)
-DT10 = Array(Blue5, Blue5a, Blue5p, 10, 0)
-
-DT11 = Array(Yellow1, Yellow1a, Yellow1p, 11, 0)
-DT12 = Array(Yellow2, Yellow2a, Yellow2p, 12, 0)
-DT13 = Array(Yellow3, Yellow3a, Yellow3p, 13, 0)
-DT14 = Array(Yellow4, Yellow4a, Yellow4p, 14, 0)
-DT15 = Array(Yellow5, Yellow5a, Yellow5p, 15, 0)
-
-DT16 = Array(Green1, Green1a, Green1p, 16, 0)
-DT17 = Array(Green2, Green2a, Green2p, 17, 0)
-DT18 = Array(Green3, Green3a, Green3p, 18, 0)
-DT19 = Array(Green4, Green4a, Green4p, 19, 0)
-DT20 = Array(Green5, Green5a, Green5p, 20, 0)
+'DT1 = Array(Red1, Red1a, Red1p, 1, 0)
+Set DT1 = (New DropTarget)(Red1, Red1a, Red1p, 1, 0, false)
+'DT2 = Array(Red2, Red2a, Red2p, 2, 0)
+Set DT2 = (New DropTarget)(Red2, Red2a, Red2p, 2, 0, false)
+'DT3 = Array(Red3, Red3a, Red3p, 3, 0)
+Set DT3 = (New DropTarget)(Red3, Red3a, Red3p, 3, 0, false)
+'DT4 = Array(Red4, Red4a, Red4p, 4, 0)
+Set DT4 = (New DropTarget)(Red4, Red4a, Red4p, 4, 0, false)
+'DT5 = Array(Red5, Red5a, Red5p, 5, 0)
+Set DT5 = (New DropTarget)(Red5, Red5a, Red5p, 5, 0, false)
+
+'DT6 = Array(Blue1, Blue1a, Blue1p, 6, 0)
+Set DT6 = (New DropTarget)(Blue1, Blue1a, Blue1p, 6, 0, false)
+'DT7 = Array(Blue2, Blue2a, Blue2p, 7, 0)
+Set DT7 = (New DropTarget)(Blue2, Blue2a, Blue2p, 7, 0, false)
+'DT8 = Array(Blue3, Blue3a, Blue3p, 8, 0)
+Set DT8 = (New DropTarget)(Blue3, Blue3a, Blue3p, 8, 0, false)
+'DT9 = Array(Blue4, Blue4a, Blue4p, 9, 0)
+Set DT9 = (New DropTarget)(Blue4, Blue4a, Blue4p, 9, 0, false)
+'DT10 = Array(Blue5, Blue5a, Blue5p, 10, 0)
+Set DT10 = (New DropTarget)(Blue5, Blue5a, Blue5p, 10, 0, false)
+
+'DT11 = Array(Yellow1, Yellow1a, Yellow1p, 11, 0)
+Set DT11 = (New DropTarget)(Yellow1, Yellow1a, Yellow1p, 11, 0, false)
+'DT12 = Array(Yellow2, Yellow2a, Yellow2p, 12, 0)
+Set DT12 = (New DropTarget)(Yellow2, Yellow2a, Yellow2p, 12, 0, false)
+'DT13 = Array(Yellow3, Yellow3a, Yellow3p, 13, 0)
+Set DT13 = (New DropTarget)(Yellow3, Yellow3a, Yellow3p, 13, 0, false)
+'DT14 = Array(Yellow4, Yellow4a, Yellow4p, 14, 0)
+Set DT14 = (New DropTarget)(Yellow4, Yellow4a, Yellow4p, 14, 0, false)
+'DT15 = Array(Yellow5, Yellow5a, Yellow5p, 15, 0)
+Set DT15 = (New DropTarget)(Yellow5, Yellow5a, Yellow5p, 15, 0, false)
+
+'DT16 = Array(Green1, Green1a, Green1p, 16, 0)
+Set DT16 = (New DropTarget)(Green1, Green1a, Green1p, 16, 0, false)
+'DT17 = Array(Green2, Green2a, Green2p, 17, 0)
+Set DT17 = (New DropTarget)(Green2, Green2a, Green2p, 17, 0, false)
+'DT18 = Array(Green3, Green3a, Green3p, 18, 0)
+Set DT18 = (New DropTarget)(Green3, Green3a, Green3p, 18, 0, false)
+'DT19 = Array(Green4, Green4a, Green4p, 19, 0)
+Set DT19 = (New DropTarget)(Green4, Green4a, Green4p, 19, 0, false)
+'DT20 = Array(Green5, Green5a, Green5p, 20, 0)
+Set DT20 = (New DropTarget)(Green5, Green5a, Green5p, 20, 0, false)
@@ -5108,3 +5160,3 @@
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -5119 +5171 @@
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
@@ -5127 +5179 @@
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
@@ -5134 +5186 @@
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -5189 +5241 @@
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
@@ -5413,0 +5466,11 @@
+Class StandupTarget
+  Private m_primary, m_prim, m_sw, m_animate
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
@@ -5414,0 +5478,12 @@
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public default Function init(primary, prim, sw, animate)
+    Set m_primary = primary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+
+    Set Init = Me
+  End Function
+End Class
@@ -5431,6 +5506,12 @@
-ST1 = Array(TargetC1, psw1,1, 0)
-ST2 = Array(TargetC2, psw2,2, 0)
-ST3 = Array(TargetC3, psw3,3, 0)
-ST4 = Array(TargetC4, psw4,4, 0)
-ST5 = Array(Target5,  psw5,5, 0)
-ST8 = Array(Target8,  psw8,8, 0)
+'ST1 = Array(TargetC1, psw1,1, 0)
+Set ST1 = (New StandupTarget)(TargetC1, psw1,1, 0)
+'ST2 = Array(TargetC2, psw2,2, 0)
+Set ST2 = (New StandupTarget)(TargetC2, psw2,2, 0)
+'ST3 = Array(TargetC3, psw3,3, 0)
+Set ST3 = (New StandupTarget)(TargetC3, psw3,3, 0)
+'ST4 = Array(TargetC4, psw4,4, 0)
+Set ST4 = (New StandupTarget)(TargetC4, psw4,4, 0)
+'ST5 = Array(Target5,  psw5,5, 0)
+Set ST5 = (New StandupTarget)(Target5,  psw5,5, 0)
+'ST8 = Array(Target8,  psw8,8, 0)
+Set ST8 = (New StandupTarget)(Target8,  psw8,8, 0)
@@ -5458 +5539 @@
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
@@ -5460,2 +5541,2 @@
-	If STArray(i)(3) <> 0 Then
-		DTBallPhysics Activeball, STArray(i)(0).orientation, STMass
+	If STArray(i).animate <> 0 Then
+		DTBallPhysics Activeball, STArray(i).primary.orientation, STMass
@@ -5469 +5550 @@
-		If STArray(i)(2) = switch Then STArrayID = i:Exit Function 
+		If STArray(i).sw = switch Then STArrayID = i:Exit Function 
@@ -5498 +5579 @@
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
