--- Harley Davidson (Sega 1999) v1.12.vbs.original
+++ Harley Davidson (Sega 1999) v1.12.vbs
@@ -620,0 +621,33 @@
+Class DropTarget
+  Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+  Public Property Let Secondary(input): Set m_secondary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+  Public Property Let IsDropped(input): m_isDropped = input: End Property
+
+  Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+    Set m_primary = primary
+    Set m_secondary = secondary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_isDropped = isDropped
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -641,4 +674,4 @@
-DT21 = Array(sw21, sw21offset, primsw21, 21, 0)
-DT22 = Array(sw22, sw22offset, primsw22, 22, 0)
-DT23 = Array(sw23, sw23offset, primsw23, 23, 0)
-DT24 = Array(sw24, sw24offset, primsw24, 24, 0)
+Set DT21 = (new DropTarget)(sw21, sw21offset, primsw21, 21, 0, false)
+Set DT22 = (new DropTarget)(sw22, sw22offset, primsw22, 22, 0, false)
+Set DT23 = (new DropTarget)(sw23, sw23offset, primsw23, 23, 0, false)
+Set DT24 = (new DropTarget)(sw24, sw24offset, primsw24, 24, 0, false)
@@ -647,9 +680,9 @@
-DT17 = Array(sw17, sw17offset, primsw17, 17, 0)
-DT18 = Array(sw18, sw18offset, primsw18, 18, 0)
-DT19 = Array(sw19, sw19offset, primsw19, 19, 0)
-DT20 = Array(sw20, sw20offset, primsw20, 20, 0)
-
-'DT33 = Array(sw33, sw33offset, primsw33, 33, 0)
-'DT34 = Array(sw34, sw34offset, primsw34, 34, 0)
-'DT35 = Array(sw35, sw35offset, primsw35, 35, 0)
-'DT36 = Array(sw36, sw36offset, primsw36, 36, 0)
+Set DT17 = (new DropTarget)(sw17, sw17offset, primsw17, 17, 0, false)
+Set DT18 = (new DropTarget)(sw18, sw18offset, primsw18, 18, 0, false)
+Set DT19 = (new DropTarget)(sw19, sw19offset, primsw19, 19, 0, false)
+Set DT20 = (new DropTarget)(sw20, sw20offset, primsw20, 20, 0, false)
+
+'Set DT33 = (new DropTarget)(sw33, sw33offset, primsw33, 33, 0, false)
+'Set DT34 = (new DropTarget)(sw34, sw34offset, primsw34, 34, 0, false)
+'Set DT35 = (new DropTarget)(sw35, sw35offset, primsw35, 35, 0, false)
+'Set DT36 = (new DropTarget)(sw36, sw36offset, primsw36, 36, 0, false)
@@ -690,3 +723,3 @@
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -701 +734 @@
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
@@ -709 +742 @@
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
@@ -716 +749 @@
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -771 +804 @@
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
@@ -962,0 +996,25 @@
+Class StandupTarget
+  Private m_primary, m_prim, m_sw, m_animate
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public default Function init(primary, prim, sw, animate)
+    Set m_primary = primary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -1004 +1062 @@
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
@@ -1006,2 +1064,2 @@
-	If STArray(i)(3) <> 0 Then
-		DTBallPhysics Activeball, STArray(i)(0).orientation, STMass
+	If STArray(i).animate <> 0 Then
+		DTBallPhysics Activeball, STArray(i).primary.orientation, STMass
@@ -1015 +1073 @@
-		If STArray(i)(2) = switch Then STArrayID = i:Exit Function 
+		If STArray(i).sw = switch Then STArrayID = i:Exit Function 
@@ -1044 +1102 @@
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
