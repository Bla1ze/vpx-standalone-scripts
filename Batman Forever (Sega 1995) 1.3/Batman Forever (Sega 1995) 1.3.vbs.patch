--- Batman Forever (Sega 1995) 1.3.vbs.original
+++ Batman Forever (Sega 1995) 1.3.vbs
@@ -3520,0 +3521,33 @@
+Class DropTarget
+	Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+  
+	Public Property Get Primary(): Set Primary = m_primary: End Property
+	Public Property Let Primary(input): Set m_primary = input: End Property
+  
+	Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+	Public Property Let Secondary(input): Set m_secondary = input: End Property
+  
+	Public Property Get Prim(): Set Prim = m_prim: End Property
+	Public Property Let Prim(input): Set m_prim = input: End Property
+  
+	Public Property Get Sw(): Sw = m_sw: End Property
+	Public Property Let Sw(input): m_sw = input: End Property
+  
+	Public Property Get Animate(): Animate = m_animate: End Property
+	Public Property Let Animate(input): m_animate = input: End Property
+  
+	Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+	Public Property Let IsDropped(input): m_isDropped = input: End Property
+  
+	Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+	  Set m_primary = primary
+	  Set m_secondary = secondary
+	  Set m_prim = prim
+	  m_sw = sw
+	  m_animate = animate
+	  m_isDropped = isDropped
+  
+	  Set Init = Me
+	End Function
+  End Class
+
@@ -3540,4 +3573,4 @@
-DT18 = Array(sw18t, sw18a, sw18p, 18, 0)
-DT19 = Array(sw19t, sw19a, sw19p, 19, 0)
-DT20 = Array(sw20t, sw20a, sw20p, 20, 0)
-DT21 = Array(sw21t, sw21a, sw21p, 21, 0)
+Set DT18 = (new DropTarget)(sw18t, sw18a, sw18p, 18, 0, false)
+Set DT19 = (new DropTarget)(sw19t, sw19a, sw19p, 19, 0, false)
+Set DT20 = (new DropTarget)(sw20t, sw20a, sw20p, 20, 0, false)
+Set DT21 = (new DropTarget)(sw21t, sw21a, sw21p, 21, 0, false)
@@ -3577,3 +3610,3 @@
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -3588 +3621 @@
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
@@ -3596 +3629 @@
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
@@ -3603 +3636 @@
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -3658 +3691 @@
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
@@ -3848,0 +3882,25 @@
+Class StandupTarget
+	Private m_primary, m_prim, m_sw, m_animate
+  
+	Public Property Get Primary(): Set Primary = m_primary: End Property
+	Public Property Let Primary(input): Set m_primary = input: End Property
+  
+	Public Property Get Prim(): Set Prim = m_prim: End Property
+	Public Property Let Prim(input): Set m_prim = input: End Property
+  
+	Public Property Get Sw(): Sw = m_sw: End Property
+	Public Property Let Sw(input): m_sw = input: End Property
+  
+	Public Property Get Animate(): Animate = m_animate: End Property
+	Public Property Let Animate(input): m_animate = input: End Property
+  
+	Public default Function init(primary, prim, sw, animate)
+	  Set m_primary = primary
+	  Set m_prim = prim
+	  m_sw = sw
+	  m_animate = animate
+  
+	  Set Init = Me
+	End Function
+  End Class
+
@@ -3865,9 +3923,9 @@
-ST25 = Array(sw25t, sw25tp, 25, 0)
-ST26 = Array(sw26t, sw26tp, 26, 0)
-ST27 = Array(sw27t, sw27tp, 27, 0)
-ST28 = Array(sw28t, sw28tp, 28, 0)
-ST29 = Array(sw29t, sw29tp, 29, 0)
-ST42 = Array(sw42t, sw42tp, 42, 0)
-ST43 = Array(sw43t, sw43tp, 43, 0)
-ST50 = Array(sw50t, sw50tp, 50, 0)
-ST51 = Array(sw51t, sw51tp, 51, 0)
+Set ST25 = (new StandupTarget)(sw25t, sw25tp, 25, 0)
+Set ST26 = (new StandupTarget)(sw26t, sw26tp, 26, 0)
+Set ST27 = (new StandupTarget)(sw27t, sw27tp, 27, 0)
+Set ST28 = (new StandupTarget)(sw28t, sw28tp, 28, 0)
+Set ST29 = (new StandupTarget)(sw29t, sw29tp, 29, 0)
+Set ST42 = (new StandupTarget)(sw42t, sw42tp, 42, 0)
+Set ST43 = (new StandupTarget)(sw43t, sw43tp, 43, 0)
+Set ST50 = (new StandupTarget)(sw50t, sw50tp, 50, 0)
+Set ST51 = (new StandupTarget)(sw51t, sw51tp, 51, 0)
@@ -3896 +3954 @@
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
@@ -3898,2 +3956,2 @@
-	If STArray(i)(3) <> 0 Then
-		DTBallPhysics Activeball, STArray(i)(0).orientation, STMass
+	If STArray(i).animate <> 0 Then
+		DTBallPhysics Activeball, STArray(i).primary.orientation, STMass
@@ -3907 +3965 @@
-		If STArray(i)(2) = switch Then STArrayID = i:Exit Function 
+		If STArray(i).sw = switch Then STArrayID = i:Exit Function 
@@ -3936 +3994 @@
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
