--- Checkpoint (Data East 1991)2.0.vbs.original
+++ Checkpoint (Data East 1991)2.0.vbs
@@ -2303,0 +2304,33 @@
+Class DropTarget
+  Private m_primary, m_secondary, m_prim, m_sw, m_animate, m_isDropped
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Secondary(): Set Secondary = m_secondary: End Property
+  Public Property Let Secondary(input): Set m_secondary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public Property Get IsDropped(): IsDropped = m_isDropped: End Property
+  Public Property Let IsDropped(input): m_isDropped = input: End Property
+
+  Public default Function init(primary, secondary, prim, sw, animate, isDropped)
+    Set m_primary = primary
+    Set m_secondary = secondary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+    m_isDropped = isDropped
+
+    Set Init = Me
+  End Function
+End Class
+
@@ -2321,0 +2355,2 @@
+'
+'       isDropped:  Boolean which determines whether a drop target is dropped. Set to false if they are initially raised, true if initially dropped.
@@ -2323,8 +2358,8 @@
-DT1 = Array(sw41, sw41a, sw41p, 41, 0)
-DT2 = Array(sw42, sw42a, sw42p, 42, 0)
-DT3 = Array(sw43, sw43a, sw43p, 43, 0)
-DT4 = Array(sw33, sw33a, sw33p, 33, 0)
-DT5 = Array(sw34, sw34a, sw34p, 34, 0)
-DT6 = Array(sw35, sw35a, sw35p, 35, 0)
-DT7 = Array(sw36, sw36a, sw36p, 36, 0)
-DT8 = Array(sw44, sw44a, sw44p, 44, 0)
+Set DT1 = (new DropTarget)(sw41, sw41a, sw41p, 41, 0, false)
+Set DT2 = (new DropTarget)(sw42, sw42a, sw42p, 42, 0, false)
+Set DT3 = (new DropTarget)(sw43, sw43a, sw43p, 43, 0, false)
+Set DT4 = (new DropTarget)(sw33, sw33a, sw33p, 33, 0, false)
+Set DT5 = (new DropTarget)(sw34, sw34a, sw34p, 34, 0, false)
+Set DT6 = (new DropTarget)(sw35, sw35a, sw35p, 35, 0, false)
+Set DT7 = (new DropTarget)(sw36, sw36a, sw36p, 36, 0, false)
+Set DT8 = (new DropTarget)(sw44, sw44a, sw44p, 44, 0, false)
@@ -2365,3 +2400,3 @@
-	DTArray(i)(4) =  DTCheckBrick(Activeball,DTArray(i)(2))
-	If DTArray(i)(4) = 1 or DTArray(i)(4) = 3 or DTArray(i)(4) = 4 Then
-		DTBallPhysics Activeball, DTArray(i)(2).rotz, DTMass
+	DTArray(i).animate =  DTCheckBrick(Activeball,DTArray(i).prim)
+	If DTArray(i).animate = 1 or DTArray(i).animate = 3 or DTArray(i).animate = 4 Then
+		DTBallPhysics Activeball, DTArray(i).prim.rotz, DTMass
@@ -2376 +2411 @@
-	DTArray(i)(4) = -1
+	DTArray(i).animate = -1
@@ -2384 +2419 @@
-	DTArray(i)(4) = 1
+	DTArray(i).animate = 1
@@ -2391 +2426 @@
-		If DTArray(i)(3) = switch Then DTArrayID = i:Exit Function 
+		If DTArray(i).sw = switch Then DTArrayID = i:Exit Function 
@@ -2446 +2481 @@
-		DTArray(i)(4) = DTAnimate(DTArray(i)(0),DTArray(i)(1),DTArray(i)(2),DTArray(i)(3),DTArray(i)(4))
+		DTArray(i).animate = DTAnimate(DTArray(i).primary,DTArray(i).secondary,DTArray(i).prim,DTArray(i).sw,DTArray(i).animate)
@@ -2641,0 +2677,26 @@
+Class StandupTarget
+  Private m_primary, m_prim, m_sw, m_animate
+
+  Public Property Get Primary(): Set Primary = m_primary: End Property
+  Public Property Let Primary(input): Set m_primary = input: End Property
+
+  Public Property Get Prim(): Set Prim = m_prim: End Property
+  Public Property Let Prim(input): Set m_prim = input: End Property
+
+  Public Property Get Sw(): Sw = m_sw: End Property
+  Public Property Let Sw(input): m_sw = input: End Property
+
+  Public Property Get Animate(): Animate = m_animate: End Property
+  Public Property Let Animate(input): m_animate = input: End Property
+
+  Public default Function init(primary, prim, sw, animate)
+    Set m_primary = primary
+    Set m_prim = prim
+    m_sw = sw
+    m_animate = animate
+
+    Set Init = Me
+  End Function
+End Class
+
+
@@ -2658 +2719 @@
-ST45 = Array(sw45, sw45o ,45, 0)
+Set ST45 = (new StandupTarget)(sw45, sw45o ,45, 0)
@@ -2681 +2742 @@
-	STArray(i)(3) =  STCheckHit(Activeball,STArray(i)(0))
+	STArray(i).animate =  STCheckHit(Activeball,STArray(i).primary)
@@ -2683,2 +2744,2 @@
-	If STArray(i)(3) <> 0 Then
-		DTBallPhysics Activeball, STArray(i)(0).orientation, STMass
+	If STArray(i).animate <> 0 Then
+		DTBallPhysics Activeball, STArray(i).primary.orientation, STMass
@@ -2692 +2753 @@
-		If STArray(i)(2) = switch Then STArrayID = i:Exit Function 
+		If STArray(i).sw = switch Then STArrayID = i:Exit Function 
@@ -2721 +2782 @@
-		STArray(i)(3) = STAnimate(STArray(i)(0),STArray(i)(1),STArray(i)(2),STArray(i)(3))
+		STArray(i).animate = STAnimate(STArray(i).primary,STArray(i).prim,STArray(i).sw,STArray(i).animate)
